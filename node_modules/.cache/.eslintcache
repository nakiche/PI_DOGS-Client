[{"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\index.js":"1","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\store\\index.js":"2","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\App.js":"3","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\reportWebVitals.js":"4","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\actions\\index.js":"5","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\detail\\Detail.jsx":"6","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\navbar\\Nav.jsx":"7","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\reducers\\index.js":"8","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\form\\Form.jsx":"9","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\welcome\\Welcome.jsx":"10","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\dogs\\Dogs.jsx":"11","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\form\\Validate.jsx":"12","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\navbar\\NavCard.jsx":"13","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\paginate\\Paginate.jsx":"14","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\searchBar\\SearchBar.jsx":"15","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\dog\\Dog.jsx":"16"},{"size":674,"mtime":1678075390400,"results":"17","hashOfConfig":"18"},{"size":361,"mtime":1678544474736,"results":"19","hashOfConfig":"18"},{"size":3690,"mtime":1678988286395,"results":"20","hashOfConfig":"18"},{"size":362,"mtime":1675179925000,"results":"21","hashOfConfig":"18"},{"size":3299,"mtime":1678988065314,"results":"22","hashOfConfig":"18"},{"size":2902,"mtime":1678937661513,"results":"23","hashOfConfig":"18"},{"size":1638,"mtime":1678857818275,"results":"24","hashOfConfig":"18"},{"size":1240,"mtime":1678987955556,"results":"25","hashOfConfig":"18"},{"size":6635,"mtime":1678980397607,"results":"26","hashOfConfig":"18"},{"size":528,"mtime":1678779782579,"results":"27","hashOfConfig":"18"},{"size":6465,"mtime":1678988149201,"results":"28","hashOfConfig":"18"},{"size":2917,"mtime":1678977202130,"results":"29","hashOfConfig":"18"},{"size":1806,"mtime":1678779417458,"results":"30","hashOfConfig":"18"},{"size":1744,"mtime":1678779422190,"results":"31","hashOfConfig":"18"},{"size":891,"mtime":1678779425655,"results":"32","hashOfConfig":"18"},{"size":1541,"mtime":1678778903748,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ggiezo",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\index.js",[],["72","73"],"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\store\\index.js",[],"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\App.js",["74","75"],"import React  from \"react\";\nimport './App.css';\nimport styled from 'styled-components';\nimport Nav from \"./components/navbar/Nav.jsx\";\nimport Detail from \"./components/detail/Detail.jsx\";\nimport Form from \"./components/form/Form.jsx\";\nimport Welcome from \"./components/welcome/Welcome.jsx\";\nimport Dogs from \"./components/dogs/Dogs.jsx\";\nimport { Route, HashRouter as Router,useLocation } from 'react-router-dom';\nimport {getDogsByName,createDog,getTemperaments,getDogs,deleteSearch}  from '../src/actions/index.js';\nimport { useDispatch,useSelector } from 'react-redux'\n\nconst DivError = styled.div`\nborder-radius:5px;\n   display:inline-block;\n   background-color:#F5293A;\n   width:auto;\n   margin-top :5px;\n   color: white;\n   font-size:1rem;\n`;\n\nconst DivSuccess = styled.div`\n   border-radius:5px;\n   display:inline-block;\n   background-color:#8EC773;\n   width:auto;\n   margin-top :5px;\n   color: white;\n   font-size:1rem;\n`;\n\n\nfunction App() {  \nconst dispatch = useDispatch();\nconst location = useLocation()\n\nconst dogDetailByName  = useSelector((state) =>state.dogByName);\nconst dogTemperaments  = useSelector((state) =>state.dogTemperaments);\nconst doggies  = useSelector((state) =>state.dogs);\nlet doggiess = doggies  \n\nconst [errors, setErrors] = React.useState('')\nconst [success, setSuccess] = React.useState('')\n\nlet cleanState=()=>{\n  setErrors('')\n  setSuccess('')\n}\n\n\nlet onSearch = async (name)=>{\n  name = name.trim()\n  if (!name) {\n    setErrors(\"Please enter breed's name\")\n    setTimeout(cleanState, 3000);\n    return\n  }\n    try{\n      await dispatch(getDogsByName(name));\n    }catch(e)\n    {\n      setErrors(`No dogs found with the name \"${name}\"`)\n      setTimeout(cleanState, 3000);\n    }\n}  \n\nlet validateName = (name) =>{\n   let nameCapitalized = name.charAt(0).toUpperCase() + name.toLowerCase().slice(1);\n\n   if (doggies.some(e => e.name.toLowerCase() === name.toLowerCase())) {\n    setErrors(`The breed \"${nameCapitalized}\" already exists in the database`)\n    setTimeout(cleanState, 3000);\n    return true\n   } \n   \n   return  false\n}\n\nlet handleSubmit = async(dogData) =>{\n\n   if (!dogData.name || !dogData.min_life_span || !dogData.max_life_span \n    || !dogData.min_height || !dogData.max_height || !dogData.min_weight \n    || !dogData.max_weight | !dogData.temperament ) {\n    setErrors(`All values are required`)\n    setTimeout(cleanState, 3000);\n    return\n  }\n    if (validateName(dogData.name)) return  \n\n   try{\n   await dispatch(createDog(dogData))\n   setSuccess(`Breed: ${dogData.name}, was succesfully created`)\n   setTimeout(cleanState, 3000);\n   }catch(e)\n   {\n    window.alert(e)\n   }\n}\n\n let onClose =  (id)=>{\n     dispatch(deleteSearch(id))\n   }  \n\nReact.useEffect(() => {\n      async function fetchData() {\n       // You can await here\n       await dispatch(getTemperaments()); //temperaments\n       await dispatch(getDogs()); //dogs\n   }\n   fetchData();\n   },[]);\n\n  return (\n  <div className='App'>\n   <Router>\n    <div>{ location.hash !== '#/' && \n      <Nav onSearch={onSearch} dogDetailByName={dogDetailByName} onClose={onClose}  />\n          } \n          {errors && <DivError >{errors}</DivError>}   \n          {success && <DivSuccess>{success}</DivSuccess>}\n    </div>   \n      <Route exact path=\"/\">\n       <Welcome  />\n      </Route>\n      <Route exact path=\"/home\">\n         <hr />\n          <Dogs dogTemperaments={dogTemperaments} doggies={doggies} />\n      </Route>\n      <Route path=\"/detail/:id\">\n        <hr />\n        <Detail />\n      </Route>\n      <Route path=\"/form\">\n        <hr />\n        <Form handleSubmit={handleSubmit} validateName={validateName}/>\n      </Route>\n    </Router>\n  </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\reportWebVitals.js",[],"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\actions\\index.js",[],"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\detail\\Detail.jsx",["76"],"import styled from 'styled-components';\r\nimport React  from \"react\";\r\nimport  {getDogsById}  from '../../actions/index.js';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router';\r\nimport { useHistory} from 'react-router-dom';\r\n\r\n\r\nconst DivCard = styled.div`\r\n   border-radius: 25px;\r\n   border: solid 1px;\r\n   display:inline-block;\r\n   padding:5px;\r\n   background-color:white;\r\n    box-shadow: 0 0 0 0.2rem #B4CCC7;\r\n   //position:relative;\r\n   width : 50%;\r\n   margin:5px;\r\n`;\r\n\r\nconst InsideCard = styled.div`\r\n   display:flex;\r\n   flex-direction:column;\r\n   `;\r\n   \r\nconst P = styled.p`\r\n   overflow-wrap: break-word;\r\n   margin:0;\r\n   font-size: 79%;\r\n   padding:2px\r\n   //position: absolute; left: 10px; top: 300px;\r\n`;  \r\n\r\nconst IMG = styled.img`\r\n    max-width: 100%;\r\n    //width: 200px;\r\n    height: 300px;\r\n    object-fit: contain;\r\n    border-radius: 25px;\r\n    margin-bottom:5px;\r\n`;\r\n\r\nconst Span =styled.span`\r\nfont-weight:bold;\r\n`\r\n\r\nconst SpanTitle =styled.span`\r\nfont-weight:bold;\r\nfont-size:100%;\r\nbackground-color:#A7B6B3;\r\nfont-style:oblique;\r\n`\r\n\r\nconst Buttons = styled.button`\r\n  border-radius: 5px;\r\n  margin: 10px;\r\n  padding: 5px;\r\n  background-color:grey;\r\n  color:white;  \r\n  font-size:1rem;\r\n  font-family:cursive;\r\n`;\r\n\r\nconst Detail = (props) => {\r\nlet history = useHistory()\r\n\r\n  const dispatch = useDispatch();\r\n  let {id} = useParams();\r\n\r\n  //mapStateToProps\r\n    const dogDetail  = useSelector((state) =>state.dogById);\r\n  \r\n  //component didMount\r\n  React.useEffect(() => {\r\n   async function fetchData() {\r\n    // You can await here\r\n    try{\r\n    await dispatch(getDogsById(id));\r\n    }catch(e)\r\n    {\r\n      window.alert(e)\r\n    }\r\n    // ...\r\n  }\r\n  fetchData(); \r\n  },[id]);\r\n\r\n    \r\n if(Object.entries(dogDetail).length>0){\r\n    let newArray=[]\r\n    if (dogDetail[0].Temperaments.length !== 0 )\r\n      {\r\n       newArray =dogDetail[0].Temperaments.map(e=> e.name)\r\n      }else{\r\n      newArray=dogDetail.Temperaments\r\n    }\r\n\r\n    return (\r\n       <div>\r\n       <DivCard>\r\n       <h1><SpanTitle>{dogDetail[0].name}</SpanTitle></h1>\r\n       <InsideCard>  \r\n            <IMG  src={dogDetail[0].image} alt={dogDetail[0].image} />\r\n            <P><Span>Id: </Span>{dogDetail[0].id}</P>\r\n            <P><Span>Height: </Span>{dogDetail[0].height} inches</P>\r\n            <P><Span>Weight: </Span>{dogDetail[0].min_weight} - {dogDetail[0].max_weight} pounds</P>\r\n            <P><Span>Temperaments: </Span>{newArray.toString()}</P>\r\n            <P><Span>Life span: </Span>{dogDetail[0].life_span}</P>\r\n\r\n         </InsideCard>\r\n         \r\n      </DivCard>\r\n      <div>\r\n      <Buttons onClick={()=>{\r\n               history.push('/home')\r\n              }} >Go back</Buttons>  \r\n      </div>\r\n    \r\n      </div> \r\n    )\r\n  }else{\r\n    \r\n    return (\r\n      <div>\r\n\r\n      </div>\r\n      )\r\n  }\r\n};\r\n\r\nexport default Detail;\r\n","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\navbar\\Nav.jsx",["77"],"import React from \"react\";\r\n\r\nimport styled from 'styled-components';\r\nimport SearchBar from '../searchBar/SearchBar.jsx'\r\nimport { Link,useLocation } from 'react-router-dom';\r\nimport NavCard from './NavCard.jsx';\r\n\r\nconst DivDogs = styled.div`\r\n   display: flex;\r\n   flex-wrap:wrap;\r\n   justify-content :space-around;\r\n `;\r\n\r\nconst Bloque = styled.div`\r\n  background-color:#B4CCC7;\r\n  display:flex;\r\n  justify-content:flex-end;\r\n`;\r\n\r\nconst H4 =styled.h4`\r\n  margin-right: 10px;\r\n  margin-top:15px;\r\n  padding-right:5px;\r\n  color:white;  \r\n  font-size:1.1rem;\r\n  font-family:cursive;\r\n`;\r\n\r\n\r\nexport default function Nav({onSearch,dogDetailByName,onClose}) {  \r\n  const location = useLocation()\r\n  \r\n  const [doggies, setDoggies] = React.useState(\"\");\r\n\r\n   React.useEffect(() => {\r\n   setDoggies(dogDetailByName)\r\n   }, [dogDetailByName]);\r\n   \r\n\r\n   return (\r\n <div className=\"\">\r\n   <Bloque>\r\n     <Link to='/home'>\r\n        <H4 className=\"borderRight\">Home</H4>\r\n      </Link>\r\n      <Link to='/Form'>\r\n        <H4 className=\"borderRight\">Form</H4>\r\n      </Link>   \r\n     \r\n    <SearchBar \r\n          onSearch={onSearch}\r\n        />\r\n   </Bloque>    \r\n\r\n  {/*{ location.pathname === '/home' && */}\r\n   <DivDogs>   \r\n      {doggies && doggies.map((c,b)=>     \r\n             <NavCard key={b}\r\n              id={c.id}\r\n              name={c.name}\r\n              temperaments={c.Temperaments}\r\n              image={c.image}\r\n              min_weight={c.min_weight}\r\n              max_weight={c.max_weight}\r\n              onClose={onClose}\r\n             />       \r\n         )  \r\n      }\r\n    </DivDogs>  \r\n  {/*}*/}\r\n    </div>\r\n   );\r\n}","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\reducers\\index.js",[],"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\form\\Form.jsx",["78"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport  {getTemperaments}  from '../../actions/index.js';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport Validate from './Validate.jsx';\r\nimport { useHistory} from 'react-router-dom';\r\n\r\n\r\nconst DivCard = styled.div`\r\n   border-radius: 25px;\r\n   border: solid 2px;\r\n   display:inline-block;\r\n   padding:5px;\r\n   background-color:white;\r\n   box-shadow: 0 0 0 0.1rem black;\r\n   position:relative;\r\n   width:50%;\r\n`;\r\n\r\nconst Buttons = styled.button`\r\n  border-radius: 5px;\r\n  margin: 10px;\r\n  padding: 5px;\r\n  background-color:grey;\r\n  color:white;  \r\n  font-size:1rem;\r\n  font-family:cursive;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  border-radius: 5px;\r\n  margin: 10px;\r\n  padding: 5px;\r\n  background-color:grey;\r\n  color:white;  \r\n  font-size:1rem;\r\n  font-family:cursive;\r\n`;\r\n\r\nexport default function Form({handleSubmit,validateName}) {  \r\nconst dispatch = useDispatch();\r\nlet history = useHistory()\r\n\r\nconst dogTemperaments  = useSelector((state) =>state.dogTemperaments);\r\n\r\nReact.useEffect(() => {\r\n   async function fetchData() {\r\n    // You can await here\r\n    try{\r\n    await dispatch(getTemperaments());\r\n    }catch(e)\r\n    {\r\n      window.alert(e)\r\n    }\r\n    // ...\r\n  }\r\n  fetchData(); \r\n\r\n  },[]);\r\n\r\nconst [errors, setErrors] = React.useState({\r\n   name: '',\r\n   min_life_span: '' ,\r\n   max_life_span:'',\r\n   min_height:'',\r\n   max_height:'',\r\n   min_weight:'',\r\n   max_weight:'',\r\n   temperament:''\r\n\r\n});\r\n\r\nconst [dogData, setDogData] = React.useState({ \r\n  name: '', \r\n  min_life_span: '' ,\r\n  max_life_span:'',\r\n  min_height:'',\r\n  max_height:'',\r\n  min_weight:'',\r\n  max_weight:'',\r\n  temperament:'',\r\n});\r\n\r\n const handleInputChange  = (evento) =>{\r\n\r\n  if(evento.target.name==='name') {\r\n    validateName(evento.target.value)  \r\n }\r\n\r\n  setDogData({\r\n      ...dogData,\r\n     [evento.target.name]: evento.target.value, // Sintaxis ES6 para actualizar la key correspondiente\r\n    });\r\n\r\n  setErrors(\r\n   Validate({\r\n      ...dogData,\r\n      [evento.target.name]: evento.target.value,\r\n   })\r\n  );\r\n } \r\n\r\n const handleSelectChange = (e) => {\r\n  let value = Array.from(e.target.selectedOptions, option => option.value);\r\n  \r\n  setDogData({\r\n      ...dogData,\r\n   temperament:value\r\n   })\r\n\r\n   setErrors(\r\n   Validate({\r\n      ...dogData,\r\n      [e.target.name]: e.target.value,\r\n   })\r\n  );\r\n}\r\n  \r\n   return (\r\n    <div>\r\n      <DivCard>\r\n        <h1>Create a new dog</h1>\r\n    \r\n        <form onSubmit={(e)=>{\r\n              e.preventDefault();\r\n              handleSubmit(dogData);\r\n              if (!validateName(dogData.name)){\r\n               setDogData({name: '', \r\n              min_life_span: '' ,\r\n              max_life_span:'',\r\n              min_height:'',\r\n              max_height:'',\r\n              min_weight:'',\r\n              max_weight:'',\r\n              temperament:'',});\r\n              e.target.reset();\r\n              }\r\n            }}>\r\n         <div>\r\n            <label htmlFor=\"\">Name:</label>\r\n            <input \r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Breed name...\"\r\n            />\r\n            <p style={{fontSize: '15px',\r\n                       color: 'red'}}>{errors.name}\r\n            </p>\r\n            <label htmlFor=\"\">Minumum life span:</label>\r\n            <input \r\n                  type=\"number\"\r\n                  name=\"min_life_span\"\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Breed's minimum life span...\"\r\n            />\r\n            <p style={{fontSize: '15px',color: 'red'}}>{errors.min_life_span}</p>\r\n            <label htmlFor=\"\">Maximum life span:</label>\r\n            <input \r\n                  type=\"number\"\r\n                  name=\"max_life_span\"\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Breed's maximum life span...\"\r\n            />\r\n            <p style={{fontSize: '15px',color: 'red'}}>{errors.max_life_span}</p>\r\n         </div>\r\n\r\n         <div>\r\n            <label htmlFor=\"\">Min height:</label>\r\n            <input \r\n                  type=\"number\"\r\n                  name=\"min_height\"\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Breed's minimun height...\"\r\n            />\r\n            <p style={{fontSize: '15px',color: 'red'}}>{errors.min_height}</p>\r\n\r\n            <label htmlFor=\"\">Max height:</label>\r\n            <input \r\n                  type=\"number\"\r\n                  name=\"max_height\"\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Breed's maximun height...\"\r\n            />\r\n            <p style={{fontSize: '15px',color: 'red'}}>{errors.max_height}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"\">Min weight:</label>\r\n            <input \r\n                  type=\"number\"\r\n                  name=\"min_weight\"\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Breed's minimun weight...\"\r\n            />\r\n            <p style={{fontSize: '15px',color: 'red'}}>{errors.min_weight}</p>\r\n\r\n            <label htmlFor=\"\">Max weight:</label>\r\n            <input \r\n                  type=\"number\"\r\n                  name=\"max_weight\"\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Breed's maximun height...\"\r\n            />\r\n            <p style={{fontSize: '15px',color: 'red'}}>{errors.max_weight}</p> \r\n          </div>\r\n\r\n          <div>\r\n             <label htmlFor=\"\">Temperaments:</label>\r\n             <select name=\"temperament\" id=\"\" multiple onChange={handleSelectChange}>\r\n                    {/*<option value=\"Temperaments\" disabled>choose temeperaments</option>*/}\r\n                    {dogTemperaments && dogTemperaments.map((c,b)=>\r\n                        <option value={c} key={b}>{c}</option>\r\n                     )}             \r\n            </select>\r\n            <p style={{fontSize: '15px',color: 'red'}}>{errors.temperament}</p> \r\n          </div>\r\n         \r\n        <div>\r\n        \r\n         <SubmitButton type=\"submit\" disabled={dogData.name && dogData.min_life_span && dogData.max_life_span \r\n        && dogData.min_height && dogData.max_height && dogData.min_weight \r\n        && dogData.max_weight && dogData.temperament.length!==0 ? false : true}>Create dog</SubmitButton>\r\n         </div>\r\n      </form>\r\n      \r\n      </DivCard>\r\n      <div>\r\n      <Buttons onClick={()=>{\r\n               history.push('/home')\r\n              }} >Go back</Buttons>  \r\n      </div>\r\n     </div> \r\n   );\r\n}","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\welcome\\Welcome.jsx",[],"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\dogs\\Dogs.jsx",["79"],"import styled from 'styled-components';\r\nimport React  from \"react\";\r\n//import { connect } from \"react-redux\";\r\nimport Dog from '../dog/Dog.jsx';\r\nimport Paginate from '../paginate/Paginate.jsx';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport  {getCurrentPage,nextPrevPag}  from '../../actions/index.js';\r\n\r\nconst Select = styled.select`\r\n   font-family:cursive;\r\n   text-align:center;\r\n   width:18%;\r\n   border-radius:10px;\r\n   `;\r\n\r\nconst DivError = styled.div`\r\n   margin :5px;\r\n   color: red;\r\n   font-size:1rem;\r\n`;\r\n\r\nexport default function Dogs({dogTemperaments,doggies}) {  \r\n    const dispatch = useDispatch();\r\n    const page  = useSelector((state) =>state.currentPage);\r\n\r\n    let cleanState=()=>{\r\n      setErrors('')\r\n    }\r\n\r\n   //component states\r\n   const [dogs, setDogs] = React.useState({dogs:\"\",\r\n                                           filtered:[],\r\n                                         });\r\n   const [errors, setErrors] = React.useState('')\r\n   //pagination states\r\n   const [currentPage, setCurrentPage] = React.useState(page);\r\n   const [postsPerPage] = React.useState(8);\r\n\r\n\r\n   //creando estados para los filtros\r\n   const [sort,setSort]=React.useState('');\r\n   const [temperament, setTemperament] = React.useState([]);\r\n\r\n\r\n   const handleSelectTemperamentChange = (e) => {\r\n        \r\n    if (e.target.value  === 'api'){\r\n      let filtered= doggies.filter(e=>e.fromApi===true)\r\n       setDogs({\r\n          ...dogs,\r\n       filtered\r\n      })\r\n    } else if (e.target.value === 'db'){\r\n       let filtered=doggies.filter(e=>e.fromApi===undefined)\r\n       if (filtered.length===0) {\r\n        setErrors(`There are no dogs stored in database`)\r\n        setTimeout(cleanState, 3000);\r\n        }\r\n      setDogs({...dogs,\r\n         filtered\r\n      })\r\n\r\n    }\r\n    else if (e.target.value === 'all'){\r\n          setDogs({...dogs,\r\n          filtered:[]\r\n          })\r\n     }\r\n   else{\r\n     setTemperament(Array.from(e.target.selectedOptions, option => option.value))\r\n      }\r\n\r\n    let pageRedux= (dispatch(getCurrentPage(1)))\r\n    setCurrentPage(pageRedux.payload)\r\n\r\n   }\r\n\r\n   //using UseEffect to get lastest state\r\n   React.useEffect(() => {\r\n    let filterByTemperament=[]  \r\n    \r\n      for (let i = 0; i < doggies.length; i++) {\r\n         let arraySearch=doggies[i].Temperaments[0].name\r\n         temperament.some(r=> arraySearch.includes(r)) && filterByTemperament.push(doggies[i])\r\n      }\r\n      setDogs({...dogs,\r\n            filtered:filterByTemperament\r\n         })\r\n   }, [temperament]);\r\n\r\n\r\n   const sortDesc = key => (a, b) => a[key] < b[key] ? 1 : -1;\r\n   const sortAsc = key => (a, b) => a[key] - b[key];\r\n\r\n  const handleSortByOrder = (selection) =>{\r\n  if (selection==='a-z'){\r\n      let filtered= doggies.slice().sort(sortAsc('name'))\r\n      setDogs({...dogs,\r\n             filtered\r\n    })\r\n   }else if (selection==='z-a'){\r\n      let filtered= doggies.slice().sort(sortDesc('name'))\r\n      setDogs({...dogs,\r\n            filtered\r\n         }) \r\n   \r\n   }else if (selection==='g-l'){\r\n      let filtered= doggies.slice().sort(sortDesc('max_weight'))\r\n      setDogs({...dogs,\r\n            filtered\r\n         }) \r\n   \r\n   }else if (selection==='l-g'){\r\n      let filtered= doggies.slice().sort(sortAsc('max_weight'))\r\n      setDogs({...dogs,\r\n            filtered\r\n         }) \r\n   }\r\n\r\n   let pageRedux= (dispatch(getCurrentPage(1)))\r\n   setCurrentPage(pageRedux.payload)\r\n }\r\n \r\n  //pagination variables\r\n   const indexOfLastPost = currentPage * postsPerPage;\r\n   const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n   const currentPosts = dogs.filtered.length===0 ? doggies.slice(indexOfFirstPost, indexOfLastPost) : dogs.filtered.slice(indexOfFirstPost, indexOfLastPost)\r\n\r\n   const paginate =  (pageNumber) => {\r\n       //setCurrentPage(pageNumber);\r\n    let pageRedux= (dispatch(getCurrentPage(pageNumber)))\r\n    setCurrentPage(pageRedux.payload)\r\n   };\r\n   const previousPage = () => {\r\n      if (currentPage !== 1) {\r\n         //setCurrentPage(currentPage - 1);\r\n        dispatch(nextPrevPag('prev'))\r\n        setCurrentPage(currentPage - 1);\r\n      }\r\n   };\r\n   const nextPage = () => {\r\n      if (currentPage !== Math.ceil(doggies.length / postsPerPage)) {\r\n         //setCurrentPage(currentPage + 1);\r\n        dispatch(nextPrevPag('next'))\r\n        setCurrentPage(currentPage + 1);\r\n      }\r\n   };\r\n\r\n    return (\r\n    <div> \r\n    {errors && <DivError >{errors}</DivError>}  \r\n    <span>Please choose: </span>\r\n    <Select name=\"temperaments\" id=\"\" multiple size=\"5\" onChange={(e)=>{\r\n         e.preventDefault();\r\n         handleSelectTemperamentChange(e);\r\n         }}>\r\n         <optgroup label=\"Sort by Origin\">\r\n             <option value=\"all\">All dogs</option>\r\n             <option value=\"api\">Api dogs</option>\r\n             <option value=\"db\">Created dogs</option>\r\n          </optgroup>     \r\n          <optgroup label=\"Sort by temperament\">       \r\n               {dogTemperaments && dogTemperaments.map((c,b)=>\r\n                      <option value={c} key={b}>{c}</option>\r\n               )} \r\n          </optgroup>     \r\n      </Select>  \r\n\r\n        <Select name={sort} id=\"\" multiple size=\"5\" onChange={(e)=>{\r\n         e.preventDefault();\r\n         setSort(e.target.value)\r\n         handleSortByOrder(e.target.value)\r\n         }}>\r\n         <optgroup label=\"Sort by\">\r\n          <option value=\"a-z\">A-z sort</option>\r\n          <option value=\"z-a\">Z-a sort</option>\r\n          </optgroup>  \r\n          \r\n          <optgroup label=\"Sort by\">\r\n          <option value=\"l-g\">Lesser to greater weight</option>\r\n          <option value=\"g-l\">Greater to lesser weight</option>\r\n          </optgroup>  \r\n\r\n\r\n        </Select>  \r\n  \r\n     <div className=\"divDogs\">\r\n        {currentPosts && currentPosts.map((c,b)=>\r\n            \r\n             <Dog key={b}\r\n              id={c.id}\r\n              name={c.name}\r\n              temperaments={c.Temperaments}\r\n              image={c.image}\r\n              min_weight={c.min_weight}\r\n              max_weight={c.max_weight}\r\n           />\r\n         )\r\n        }  \r\n          \r\n        </div>\r\n         <Paginate postsPerPage={postsPerPage}\r\n             totalPosts={dogs.filtered.length===0 ? doggies.length :dogs.filtered.length}\r\n             paginate={paginate}\r\n             previousPage={previousPage}\r\n             nextPage={nextPage}\r\n             currentPage={currentPage}\r\n             />\r\n    </div>\r\n    ); \r\n}\r\n\r\n","C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\form\\Validate.jsx",[],"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\navbar\\NavCard.jsx",[],"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\paginate\\Paginate.jsx",[],"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\searchBar\\SearchBar.jsx",[],"C:\\Users\\stec7\\Desktop\\Henry\\Labs\\PI-Dogs-main\\client\\src\\components\\dog\\Dog.jsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":41,"column":5,"nodeType":"86","messageId":"87","endLine":41,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":112,"column":6,"nodeType":"90","endLine":112,"endColumn":8,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"89","line":86,"column":5,"nodeType":"90","endLine":86,"endColumn":9,"suggestions":"92"},{"ruleId":"84","severity":1,"message":"93","line":31,"column":9,"nodeType":"86","messageId":"87","endLine":31,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":59,"column":5,"nodeType":"90","endLine":59,"endColumn":7,"suggestions":"94"},{"ruleId":"88","severity":1,"message":"95","line":89,"column":7,"nodeType":"90","endLine":89,"endColumn":20,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'doggiess' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["99"],["100"],"'location' is assigned a value but never used.",["101"],"React Hook React.useEffect has missing dependencies: 'doggies' and 'dogs'. Either include them or remove the dependency array. You can also do a functional update 'setDogs(d => ...)' if you only need 'dogs' in the 'setDogs' call.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"103","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [dispatch]",{"range":"110","text":"111"},"Update the dependencies array to be: [dispatch, id]",{"range":"112","text":"113"},{"range":"114","text":"111"},"Update the dependencies array to be: [doggies, dogs, temperament]",{"range":"115","text":"116"},[2910,2912],"[dispatch]",[1755,1759],"[dispatch, id]",[1298,1300],[2535,2548],"[doggies, dogs, temperament]"]