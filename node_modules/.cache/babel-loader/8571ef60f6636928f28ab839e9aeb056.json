{"ast":null,"code":"const regexName = /^[a-zA-Z]+$/;\nexport default function Validate(inputs) {\n  var errors = {};\n\n  //name validation\n  if (!inputs.name) {\n    errors.name = 'Name is required';\n  } else if (inputs.name.length < 3) {\n    errors.name = 'Must contain at least 3 characters';\n  } else if (!regexName.test(inputs.name)) {\n    //a-Z checking\n    errors.name = 'Invalid name given';\n  }\n\n  //min_life_span validation\n  if (inputs.name.length > 2 && !inputs.min_life_span) {\n    errors.min_life_span = 'Minimun life span is required';\n  } else if (inputs.name.length > 2 && inputs.min_life_span < 6) {\n    errors.min_life_span = 'Must be 6 year or more';\n  } else if (inputs.name.length > 2 && inputs.min_life_span > 13) {\n    errors.min_life_span = 'Must be less than 14 years';\n  }\n\n  //max_life_span validation\n  if (inputs.min_life_span.length > 0 && !inputs.max_life_span) {\n    errors.max_life_span = 'Maximun life span is required';\n  } else if (inputs.min_life_span.length > 0 && inputs.max_life_span < 8) {\n    errors.max_life_span = 'Must be 8 year or more';\n  } else if (inputs.min_life_span.length > 0 && inputs.max_life_span > 20) {\n    errors.max_life_span = 'Must be less than 21 years';\n  }\n\n  //min_height validation\n  if (!inputs.min_height) {\n    errors.min_height = 'Minimun height is required';\n  } else if (inputs.min_height < 15) {\n    errors.min_height = 'Must be 15 inches or more';\n  } else if (inputs.min_height > 76) {\n    errors.min_height = 'Must be less than 77 inches';\n  }\n\n  //max_height validation\n  if (!inputs.max_height) {\n    errors.max_height = 'Maximun height is required';\n  } else if (inputs.max_height < 15) {\n    errors.max_height = 'Must be 23 inches or more';\n  } else if (inputs.max_height > 90) {\n    errors.max_height = 'Must be less than 90 inches';\n  }\n\n  //min_weight validation\n  if (!inputs.min_weight) {\n    errors.min_weight = 'Minimun weight is required';\n  } else if (inputs.min_weight < 6) {\n    errors.min_weight = 'Must be 15 pounds or more';\n  } else if (inputs.min_weight > 59) {\n    errors.min_weight = 'Must be less than 60 pounds';\n  }\n\n  //max_weight validation\n  if (!inputs.max_weight) {\n    errors.max_weight = 'Maximun weight is required';\n  } else if (inputs.max_weight < 8) {\n    errors.max_weight = 'Must be 8 pounds or more';\n  } else if (inputs.max_weight > 110) {\n    errors.max_weight = 'Must be less than 111 pounds';\n  }\n\n  //temperaments validation\n  if (inputs.temperament.length < 1) {\n    errors.temperament = 'At least one temperament must be selected';\n  }\n  return errors;\n}\n_c = Validate;\nvar _c;\n$RefreshReg$(_c, \"Validate\");","map":{"version":3,"names":["regexName","Validate","inputs","errors","name","length","test","min_life_span","max_life_span","min_height","max_height","min_weight","max_weight","temperament","_c","$RefreshReg$"],"sources":["C:/Users/stec7/Desktop/Henry/Labs/PI-Dogs-main/client/src/components/form/Validate.jsx"],"sourcesContent":["const regexName = /^[a-zA-Z]+$/\r\n\r\nexport default function Validate(inputs) {\r\nvar errors = {};\r\n\r\n//name validation\r\n if (!inputs.name) {\r\n   errors.name = 'Name is required';\r\n}else if (inputs.name.length<3) {\r\n   errors.name = 'Must contain at least 3 characters';\r\n}else if (!regexName.test(inputs.name)) { //a-Z checking\r\n   errors.name = 'Invalid name given';\r\n}\r\n\r\n//min_life_span validation\r\nif (inputs.name.length>2 && !inputs.min_life_span) {\r\n   errors.min_life_span = 'Minimun life span is required';\r\n}else if (inputs.name.length>2 && inputs.min_life_span < 6) {\r\n   errors.min_life_span = 'Must be 6 year or more';\r\n}else if (inputs.name.length>2 && inputs.min_life_span > 13  ) {\r\n   errors.min_life_span = 'Must be less than 14 years';\r\n}   \r\n\r\n//max_life_span validation\r\nif (inputs.min_life_span.length>0 && !inputs.max_life_span) {\r\n   errors.max_life_span = 'Maximun life span is required';\r\n}else if (inputs.min_life_span.length>0 && inputs.max_life_span < 8) {\r\n   errors.max_life_span = 'Must be 8 year or more';\r\n}else if (inputs.min_life_span.length>0 && inputs.max_life_span > 20  ) {\r\n   errors.max_life_span = 'Must be less than 21 years';\r\n}    \r\n\r\n//min_height validation\r\nif (!inputs.min_height) {\r\n   errors.min_height = 'Minimun height is required';\r\n}else if (inputs.min_height < 15) {\r\n   errors.min_height = 'Must be 15 inches or more';\r\n}else if (inputs.min_height > 76  ) {\r\n   errors.min_height = 'Must be less than 77 inches';\r\n}  \r\n\r\n//max_height validation\r\nif (!inputs.max_height) {\r\n   errors.max_height = 'Maximun height is required';\r\n}else if (inputs.max_height < 15) {\r\n   errors.max_height = 'Must be 23 inches or more';\r\n}else if (inputs.max_height > 90  ) {\r\n   errors.max_height = 'Must be less than 90 inches';\r\n}    \r\n\r\n//min_weight validation\r\nif (!inputs.min_weight) {\r\n   errors.min_weight = 'Minimun weight is required';\r\n}else if (inputs.min_weight < 6) {\r\n   errors.min_weight = 'Must be 15 pounds or more';\r\n}else if (inputs.min_weight > 59  ) {\r\n   errors.min_weight = 'Must be less than 60 pounds';\r\n}  \r\n\r\n//max_weight validation\r\nif (!inputs.max_weight) {\r\n   errors.max_weight = 'Maximun weight is required';\r\n}else if (inputs.max_weight < 8) {\r\n   errors.max_weight = 'Must be 8 pounds or more';\r\n}else if (inputs.max_weight > 110  ) {\r\n   errors.max_weight = 'Must be less than 111 pounds';\r\n}\r\n\r\n//temperaments validation\r\nif (inputs.temperament.length<1) {\r\n   errors.temperament = 'At least one temperament must be selected';\r\n}\r\n\r\nreturn errors;\r\n}"],"mappings":"AAAA,MAAMA,SAAS,GAAG,aAAa;AAE/B,eAAe,SAASC,QAAQA,CAACC,MAAM,EAAE;EACzC,IAAIC,MAAM,GAAG,CAAC,CAAC;;EAEf;EACC,IAAI,CAACD,MAAM,CAACE,IAAI,EAAE;IAChBD,MAAM,CAACC,IAAI,GAAG,kBAAkB;EACnC,CAAC,MAAK,IAAIF,MAAM,CAACE,IAAI,CAACC,MAAM,GAAC,CAAC,EAAE;IAC7BF,MAAM,CAACC,IAAI,GAAG,oCAAoC;EACrD,CAAC,MAAK,IAAI,CAACJ,SAAS,CAACM,IAAI,CAACJ,MAAM,CAACE,IAAI,CAAC,EAAE;IAAE;IACvCD,MAAM,CAACC,IAAI,GAAG,oBAAoB;EACrC;;EAEA;EACA,IAAIF,MAAM,CAACE,IAAI,CAACC,MAAM,GAAC,CAAC,IAAI,CAACH,MAAM,CAACK,aAAa,EAAE;IAChDJ,MAAM,CAACI,aAAa,GAAG,+BAA+B;EACzD,CAAC,MAAK,IAAIL,MAAM,CAACE,IAAI,CAACC,MAAM,GAAC,CAAC,IAAIH,MAAM,CAACK,aAAa,GAAG,CAAC,EAAE;IACzDJ,MAAM,CAACI,aAAa,GAAG,wBAAwB;EAClD,CAAC,MAAK,IAAIL,MAAM,CAACE,IAAI,CAACC,MAAM,GAAC,CAAC,IAAIH,MAAM,CAACK,aAAa,GAAG,EAAE,EAAI;IAC5DJ,MAAM,CAACI,aAAa,GAAG,4BAA4B;EACtD;;EAEA;EACA,IAAIL,MAAM,CAACK,aAAa,CAACF,MAAM,GAAC,CAAC,IAAI,CAACH,MAAM,CAACM,aAAa,EAAE;IACzDL,MAAM,CAACK,aAAa,GAAG,+BAA+B;EACzD,CAAC,MAAK,IAAIN,MAAM,CAACK,aAAa,CAACF,MAAM,GAAC,CAAC,IAAIH,MAAM,CAACM,aAAa,GAAG,CAAC,EAAE;IAClEL,MAAM,CAACK,aAAa,GAAG,wBAAwB;EAClD,CAAC,MAAK,IAAIN,MAAM,CAACK,aAAa,CAACF,MAAM,GAAC,CAAC,IAAIH,MAAM,CAACM,aAAa,GAAG,EAAE,EAAI;IACrEL,MAAM,CAACK,aAAa,GAAG,4BAA4B;EACtD;;EAEA;EACA,IAAI,CAACN,MAAM,CAACO,UAAU,EAAE;IACrBN,MAAM,CAACM,UAAU,GAAG,4BAA4B;EACnD,CAAC,MAAK,IAAIP,MAAM,CAACO,UAAU,GAAG,EAAE,EAAE;IAC/BN,MAAM,CAACM,UAAU,GAAG,2BAA2B;EAClD,CAAC,MAAK,IAAIP,MAAM,CAACO,UAAU,GAAG,EAAE,EAAI;IACjCN,MAAM,CAACM,UAAU,GAAG,6BAA6B;EACpD;;EAEA;EACA,IAAI,CAACP,MAAM,CAACQ,UAAU,EAAE;IACrBP,MAAM,CAACO,UAAU,GAAG,4BAA4B;EACnD,CAAC,MAAK,IAAIR,MAAM,CAACQ,UAAU,GAAG,EAAE,EAAE;IAC/BP,MAAM,CAACO,UAAU,GAAG,2BAA2B;EAClD,CAAC,MAAK,IAAIR,MAAM,CAACQ,UAAU,GAAG,EAAE,EAAI;IACjCP,MAAM,CAACO,UAAU,GAAG,6BAA6B;EACpD;;EAEA;EACA,IAAI,CAACR,MAAM,CAACS,UAAU,EAAE;IACrBR,MAAM,CAACQ,UAAU,GAAG,4BAA4B;EACnD,CAAC,MAAK,IAAIT,MAAM,CAACS,UAAU,GAAG,CAAC,EAAE;IAC9BR,MAAM,CAACQ,UAAU,GAAG,2BAA2B;EAClD,CAAC,MAAK,IAAIT,MAAM,CAACS,UAAU,GAAG,EAAE,EAAI;IACjCR,MAAM,CAACQ,UAAU,GAAG,6BAA6B;EACpD;;EAEA;EACA,IAAI,CAACT,MAAM,CAACU,UAAU,EAAE;IACrBT,MAAM,CAACS,UAAU,GAAG,4BAA4B;EACnD,CAAC,MAAK,IAAIV,MAAM,CAACU,UAAU,GAAG,CAAC,EAAE;IAC9BT,MAAM,CAACS,UAAU,GAAG,0BAA0B;EACjD,CAAC,MAAK,IAAIV,MAAM,CAACU,UAAU,GAAG,GAAG,EAAI;IAClCT,MAAM,CAACS,UAAU,GAAG,8BAA8B;EACrD;;EAEA;EACA,IAAIV,MAAM,CAACW,WAAW,CAACR,MAAM,GAAC,CAAC,EAAE;IAC9BF,MAAM,CAACU,WAAW,GAAG,2CAA2C;EACnE;EAEA,OAAOV,MAAM;AACb;AAACW,EAAA,GAxEuBb,QAAQ;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}